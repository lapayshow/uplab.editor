{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/_surrogatesDialog.class.js","webpack:///./src/js/_surrogatesParser.class.js","webpack:///./src/js/surrogates.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","UplabSurrogatesDialog","_editor","_params","_tag","this","params","data","attributes","initDialog","html","self","_dialog","BX","CDialog","title","dialogTitle","icon","resizable","width","height","content_url","getDialogUrl","buttons","className","id","action","getSnippetHTML","console","log","selection","InsertHTML","setTimeout","synchro","FullSyncFromIframe","parentWindow","Close","$","DIV","remove","$form","uplabEditorSnippetsParam","dialogUrl","serializeArray","res","parent","message","SetContent","getContent","htmlTpl","formData","values","each","match","push","replace","JSON","stringify","Show","UplabSurrogatesParser","editor","initEditorHandler","addEditorParser","addButtons","surrogatesHandlers","AddCustomParser","content","phpParser","parse","regex","str","_args","arguments","item","attrs","attrKey","param","VALUES","TEMPLATE","ID","surrogate","getTitle","GetSurrogateHTML","code","AddButton","iconClassName","src","toolbarSort","handler","event","show","addCustomEvent","e","parser","arBxNodes","up_edit_snippet","Parse","_GetUnParsedContent","tag","bxTags","window","v","TYPE","encodeURIComponent","ready","document","on","closest"],"mappings":"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","file":"/dist/js/surrogates.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class UplabSurrogatesDialog {\n\n    constructor(_editor, _params, _tag) {\n        this._editor = _editor;\n        this._params = _params;\n\n        // если мы передали тег в констуртор то получаем параметры тега\n        // там у нас в json хранится содеражание всего аккордеона\n        this._tag = _tag || {};\n        this._tag.params = this._tag.params || {};\n        this._tag.params.data = this._tag.params.data || {};\n        this._tag.params.data.attributes = this._tag.params.attributes || {};\n        this.data = this._tag.params.data || {};\n\n        this.initDialog();\n    }\n\n    initDialog() {\n        const self = this;\n        let html;\n\n        self._dialog = new BX.CDialog({ //Инициализаци окна добавления/редактирования аккордеона\n            title: self._params.dialogTitle,\n            // min_width: 400,\n            // min_height: 400,\n            icon: 'head-block',\n            resizable: false,\n            width: 500,\n            height: 310,\n            content_url: self._params.getDialogUrl(self.data.attributes),\n            buttons: [\n                // Кнопки в окне\n\n                { // Кнопка применяет изменения или добавляет аккордеон\n                    title: \"OK\",\n                    name: 'saveUplabSurrogate',\n                    className: 'adm-btn-save',\n                    id: 'saveUplabSurrogate',\n                    action: function () {\n                        var _thisBtn = this; // Сама кнопка\n                        html = self.getSnippetHTML(); //Метод получает html аккордеона\n\n                        if (self._tag.params.html) {\n                            self._tag.params.html = html;  // заменить конетент, если сниппет уже есть,\n                        } else {\n                            console.log('insert', html);\n                            self._editor.selection.InsertHTML(html); // вставить контент в редактор\n                        }\n\n                        setTimeout(function () {\n                            // Спустя немного времени обновляем содержииме\n                            // чтобы применился новый аккордеон\n                            self._editor.synchro.FullSyncFromIframe();\n                        }, 50);\n\n                        this.parentWindow.Close(); //Закрываем окно\n                        $(this.parentWindow.DIV).remove(); //Удаляем окно из DOM-a\n                    }\n                },\n\n                { //Кнопка добавляем блок для редактирования элемента аккордеона\n                    title: \"Еще элемент\",\n                    className: \"adm-btn-add\",\n                    action: function () {\n                        const $form = $('.uplab-surrogate-editor-form');\n                        // console.log('array: ', $form.serializeArray());\n                        $.get(\n                            uplabEditorSnippetsParam.dialogUrl + '?ADD',\n                            $form.serializeArray(),\n                            function (res) {\n                                $form.parent().html(res);\n                            }\n                        );\n                    }\n                },\n\n                { //Отмена\n                    title: BX.message('JS_CORE_WINDOW_CANCEL'),\n                    id: 'cancel',\n                    name: 'cancel',\n                    action: function () {\n                        this.parentWindow.Close(); //Закрываем окно\n                        $(this.parentWindow.DIV).remove(); //Удаляем DOM окна\n                    }\n                }\n            ]\n        });\n    }\n\n    getContent() {\n        // Метотд получает сожержимое окна редактора аккордеона\n        // Заменено на ссылку\n    }\n\n    refreshContent() { //Метотд обновляет содержимое окна редактора аккордеона\n        const self = this;\n        self._dialog.SetContent(self.getContent());\n    }\n\n    getSnippetHTML() { //Метотд получает html аккордеона по данным из this.data\n        const self = this;\n        let html = self._params.htmlTpl;\n        let formData = $('.uplab-surrogate-editor-form').serializeArray();\n        let data = {};\n        let values = {};\n\n        $.each(formData, function (key, value) {\n            let name = value.name.match(/((.+)\\[([\\w\\d_-]*)]|.+)/);\n\n            if (!value.value) return;\n\n            if (name[1] === 'TYPE') {\n\n                data[name[1]] = value.value;\n\n            } else {\n\n                if (name[2]) {\n                    if (name[3]) {\n                        values[name[2]][name[3]] = value.value;\n                    } else {\n                        values[name[2]] = values[name[2]] || [];\n                        values[name[2]].push(value.value);\n                    }\n                } else {\n                    values[name[1]] = value.value;\n                }\n\n            }\n            // console.log(name, name[2], name[3]);\n        });\n\n        // console.log(data, 'FORM!');\n\n        html = html.replace(/#TYPE#/g, data['TYPE'] || '');\n        html = html.replace(/#VALUES#/g, JSON.stringify(values || ''));\n\n        // console.log('html', html);\n\n        return html;\n    }\n\n    show() { //Метотд показывает окно редактора аккордеона\n        this._dialog.Show();\n    }\n\n}\n","import UplabSurrogatesDialog from \"./_surrogatesDialog.class\";\n\nexport default class UplabSurrogatesParser {\n    constructor(params, editor) {\n        this._params = params;\n        this._editor = editor;\n\n        this.initEditorHandler();\n    }\n\n    initEditorHandler() {\n        const self = this;\n\n        self.addEditorParser();\n        self.addButtons();\n        self.surrogatesHandlers();\n    }\n\n    addEditorParser() {\n        const self = this;\n\n        self._editor.AddCustomParser(function (content) {\n            // А а это событие которое парсит содержимое и добавляет суррогаты\n            const parser = self._editor.phpParser; //Переменная  в которой хранится парсер виз. редактора\n            let index = 0;\n\n            content = content || '';\n\n            content = content.replace(\n                self._params.parse.regex,\n                function (str) {\n                    const _args = arguments;\n                    let res;\n                    let title;\n                    let item = {};\n\n                    // console.log('arguments', arguments);\n\n                    $.each(self._params.parse.attrs, function (i, attrKey) {\n                        let param = _args[i + 1];\n\n                        if (attrKey === 'VALUES') {\n                            param = JSON.parse(param);\n                        }\n\n                        item[attrKey] = param;\n                    });\n\n                    if (item.hasOwnProperty('VALUES') && item.VALUES) {\n                        if (item.VALUES.TEMPLATE) item.TEMPLATE = item.VALUES.TEMPLATE;\n                        if (item.VALUES.ID) item.ID = item.VALUES.ID;\n                    }\n\n                    title = self._params.surrogate.getTitle(item);\n\n                    res = self._editor.phpParser.GetSurrogateHTML(\n                        self._params.surrogate.code, title, title,\n                        {\n                            html: str,\n                            attributes: item\n                        }\n                    );\n\n\n                    return res || str;\n                }\n            );\n\n            return content; //Возвращаем новое содержимое виз. редактора\n        });\n    }\n\n    addButtons() {\n        const self = this;\n\n        //Метотд для добавления кнопки на панель инструментов редактора\n        self._editor.AddButton({\n            iconClassName: 'bxhtmled-button bx-plane-button',\n            src: '/bitrix/images/uplab.editor/i-tools.svg',\n            id: 'typograf',\n            title: 'typograf',\n            toolbarSort: 1,\n            //action: \"insertAnchor\"\n            handler: function (event) {\n                const _dialog = new UplabSurrogatesDialog(self._editor, self._params);\n                _dialog.show();\n            }\n        });\n    }\n\n    surrogatesHandlers() {\n        const self = this;\n\n        BX.addCustomEvent('OnGetBxNodeList', function (e, t) {\n            const parser = this.phpParser;\n            parser.arBxNodes.up_edit_snippet = {\n                Parse: function (params) {\n                    return parser._GetUnParsedContent(params.html);\n                }\n            };\n        });\n\n        BX.addCustomEvent('OnSurrogateDblClick', function (e, t) { // Событие на двойной клик по суррогату\n            let html = \"\";\n\n            if (t.tag !== 'up_edit_snippet') return;\n\n            if (typeof self._editor.bxTags[t.id] !== 'undefined') {\n                const _dialog = new UplabSurrogatesDialog(self._editor, self._params, t);\n                _dialog.show();\n            }\n        });\n    }\n}\n","import UplabSurrogatesParser from \"./_surrogatesParser.class\";\n\n\nwindow.uplabEditorSnippetsParam = {};\n\n\nuplabEditorSnippetsParam.parse = {\n    regex: /\\[UP_EDITOR_SNIPPET TYPE=\"([#\\w\\s._-]*)\"](.*?)\\[\\/UP_EDITOR_SNIPPET]/g,\n    attrs: ['TYPE', 'VALUES'],\n};\n\n\nuplabEditorSnippetsParam.htmlTpl = '[UP_EDITOR_SNIPPET TYPE=\"#TYPE#\"]#VALUES#[/UP_EDITOR_SNIPPET]';\n\n\nuplabEditorSnippetsParam.surrogate = {\n    code: 'up_edit_snippet',\n    getTitle: function (v) {\n        let t = 'Сниппет [#TYPE##ID##TEMPLATE#]';\n\n        t = t.replace(/#TYPE#/, v.TYPE);\n\n        t = t.replace(/#TEMPLATE#/, v.hasOwnProperty('TEMPLATE') && v.TEMPLATE\n            ? ` / ${v.TEMPLATE}`\n            : ''\n        );\n\n        t = t.replace(/#ID#/, v.hasOwnProperty('ID') && v.ID\n            ? `#${v.ID}`\n            : ''\n        );\n\n        return t;\n    }\n};\n\n\nuplabEditorSnippetsParam.dialogUrl = '/bitrix/tools/uplab.editor_surrogates_popup.php';\n\n\nuplabEditorSnippetsParam.getDialogUrl = function (v) {\n    let t = uplabEditorSnippetsParam.dialogUrl + '?TYPE=#TYPE#&#VALUES#';\n\n    t = t.replace(/#TYPE#/, encodeURIComponent(v.TYPE || ''));\n    t = t.replace(/#VALUES#/, $.param(v.VALUES || {}));\n\n    return t;\n};\n\n\nuplabEditorSnippetsParam.dialogTitle = '[Uplab.Editor] Сниппеты';\n\n\n//Событие до иницализации самого редактора, тут мы и будем писать\nBX.addCustomEvent('OnEditorInitedBefore', function () {\n    // Загоняем обьект редактора в переменную чтобы в любой момент получить к нему доступ\n    const _editor = this;\n\n    new UplabSurrogatesParser(\n        uplabEditorSnippetsParam,\n        _editor\n    );\n});\n\n\n// noinspection JSValidateTypes\nBX.ready(function () {\n    // noinspection JSUnresolvedFunction\n    $(document).on('change', '.uplab-surrogate-editor-form [data-form-input]', function () {\n        const $form = $(this).closest('form');\n        console.log('array: ', $form.serializeArray());\n\n        $.get(\n            uplabEditorSnippetsParam.dialogUrl,\n            $form.serializeArray(),\n            function (res) {\n                $form.parent().html(res);\n            }\n        );\n    });\n});\n"],"sourceRoot":""}